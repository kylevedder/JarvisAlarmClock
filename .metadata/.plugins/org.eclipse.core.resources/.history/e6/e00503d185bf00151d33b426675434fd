package piclock;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;

public class CronScheduler {

	private static final String TEMP_CRON_FILE = "temp.cron";
	private File script;

	public CronScheduler(String scriptPath) {
		this.script = new File(".", scriptPath);
	}

	public void schedule(Alarm alarm) {
		System.out.println(alarm);
		String cronString = createCronString(alarm, script);
		System.out.println(cronString);
		File tempCronFile = new File(TEMP_CRON_FILE);
		StringBuffer output = executeCommand("crontab -l");
		System.out.println(output);
		writeToFile(tempCronFile, output);
		System.out.println(executeCommand("crontab " + TEMP_CRON_FILE));
	}

	private String createCronString(Alarm alarm, File script) {
		try {
			return String.format("%d %d * * %s %s", alarm.getMinute(), alarm.getHour(),
					(alarm.isWeekday()) ? "1-5" : "*", script.getCanonicalPath());
		} catch (IOException e) {
			e.printStackTrace();
			return "";
		}
	}

	private StringBuffer executeCommand(String command) {

		StringBuffer output = new StringBuffer();

		Process p;
		try {
			p = Runtime.getRuntime().exec(command);
			p.waitFor();
			BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));

			String line = "";
			while ((line = reader.readLine()) != null) {
				output.append(line + "\n");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

		return output;

	}

	private void writeToFile(File file, StringBuffer contents) {
		try {

			// if file doesnt exists, then create it
			if (!file.exists()) {
				file.createNewFile();
			}

			FileWriter fw = new FileWriter(file.getAbsoluteFile());
			BufferedWriter bw = new BufferedWriter(fw);
			bw.write(contents.toString());
			bw.close();

			System.out.println("Done");

		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
